// utils
import { copyPropertyDescriptors, getOwnProperties, getPrototype } from './utils';

var create = Object.create;

/**
 * @function pure
 *
 * @description
 * create an object with no additional prototypical methods beyond
 * what is passed in the second parameter
 *
 * @param {Object} [object={}] the object to create a pure version of
 * @param {Object} [prototype=null] the prototype to apply to the pure object
 * @return {Object} the pure object
 */

var pure = function pure() {
  var object = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var prototype = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

  var properties = getOwnProperties(object);

  if (!properties.length) {
    return create(null);
  }

  var target = create(getPrototype(prototype));

  return copyPropertyDescriptors(target, object, properties);
};

export default pure;