{"remainingRequest":"C:\\Users\\Work Account\\Documents\\4th Year\\Software Development\\Website\\smartgrocery\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Work Account\\Documents\\4th Year\\Software Development\\Website\\smartgrocery\\src\\router.js","dependencies":[{"path":"C:\\Users\\Work Account\\Documents\\4th Year\\Software Development\\Website\\smartgrocery\\src\\router.js","mtime":1579646053856},{"path":"C:\\Users\\Work Account\\Documents\\4th Year\\Software Development\\Website\\smartgrocery\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Work Account\\Documents\\4th Year\\Software Development\\Website\\smartgrocery\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Router from 'vue-router';\nimport HomePage from '@/components/HomePage';\nimport VerifyDetails from '@/components/VerifyDetails';\nimport GroceryDashboard from '@/components/GroceryDashboard';\nimport GroceryLists from '@/components/GroceryLists';\nimport SignIn from '@/components/SignIn';\nimport SignUp from '@/components/SignUp';\nimport AddItem from '@/components/AddItem';\nimport ModifyList from '@/components/ModifyList';\nimport { fb } from \"./firebaseInit\";\nVue.use(Router);\nvar router = new Router({\n  routes: [{\n    path: '/',\n    name: 'homepage',\n    component: HomePage\n  }, {\n    path: '/verify-details/',\n    name: 'verifyDetails',\n    component: VerifyDetails,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/grocery-dashboard/',\n    name: 'groceryDashboard',\n    component: GroceryDashboard,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/grocerylists/',\n    name: 'groceryLists',\n    component: GroceryLists,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/addItem/',\n    name: 'add-item',\n    component: AddItem,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/modifyList/:id',\n    name: 'modify-list',\n    props: true,\n    component: ModifyList,\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/signin',\n    name: 'signin',\n    component: SignIn,\n    meta: {\n      requiresGuest: true\n    }\n  }, {\n    path: '/signup',\n    name: 'signup',\n    component: SignUp,\n    meta: {\n      requiresGuest: true\n    }\n  }]\n}); //Navigation Guards\n\nrouter.beforeEach(function (to, from, next) {\n  //Check for auth guard\n  if (to.matched.some(function (record) {\n    return record.meta.requiresAuth;\n  })) {\n    //Check if Not Logged into FB\n    if (!fb.auth().currentUser) {\n      next({\n        path: '/signin',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n    } else {\n      //If logged in \n      next();\n    }\n  } else if (to.matched.some(function (record) {\n    return record.meta.requiresGuest;\n  })) {\n    //Check if  Logged into FB\n    if (fb.auth().currentUser) {\n      next({\n        path: '/',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n    } else {\n      //If logged in \n      next();\n    }\n  } else {\n    next();\n  }\n});\nexport default router;",{"version":3,"sources":["C:/Users/Work Account/Documents/4th Year/Software Development/Website/smartgrocery/src/router.js"],"names":["Vue","Router","HomePage","VerifyDetails","GroceryDashboard","GroceryLists","SignIn","SignUp","AddItem","ModifyList","fb","use","router","routes","path","name","component","meta","requiresAuth","props","requiresGuest","beforeEach","to","from","next","matched","some","record","auth","currentUser","query","redirect","fullPath"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\nimport HomePage from '@/components/HomePage'\nimport VerifyDetails from '@/components/VerifyDetails'\nimport GroceryDashboard from '@/components/GroceryDashboard'\nimport GroceryLists from '@/components/GroceryLists'\nimport SignIn from '@/components/SignIn'\nimport SignUp from '@/components/SignUp'\nimport AddItem from '@/components/AddItem'\nimport ModifyList from '@/components/ModifyList'\n\nimport {\n  fb\n} from './firebaseInit'\n\nVue.use(Router)\n\nlet router = new Router({\n  routes: [{\n      path: '/',\n      name: 'homepage',\n      component: HomePage\n    },\n    {\n      path: '/verify-details/',\n      name: 'verifyDetails',\n      component: VerifyDetails,\n      meta: {\n        requiresAuth: true\n      }\n    },\n    {\n      path: '/grocery-dashboard/',\n      name: 'groceryDashboard',\n      component: GroceryDashboard,\n      meta: {\n        requiresAuth: true\n      }\n    },\n    {\n      path: '/grocerylists/',\n      name: 'groceryLists',\n      component: GroceryLists,\n      meta: {\n        requiresAuth: true\n      }\n    },\n    {\n      path: '/addItem/',\n      name: 'add-item',\n      component: AddItem,\n      meta: {\n        requiresAuth: true\n      }\n    },\n    {\n      path: '/modifyList/:id',\n      name: 'modify-list',\n      props: true,\n      component: ModifyList,\n      meta: {\n        requiresAuth: true\n      }\n    },\n    {\n      path: '/signin',\n      name: 'signin',\n      component: SignIn,\n      meta: {\n        requiresGuest: true\n      }\n    },\n    {\n      path: '/signup',\n      name: 'signup',\n      component: SignUp,\n      meta: {\n        requiresGuest: true\n      }\n    }\n  ]\n});\n\n//Navigation Guards\n\nrouter.beforeEach((to, from, next) => {\n  //Check for auth guard\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    //Check if Not Logged into FB\n    if (!fb.auth().currentUser) {\n      next({\n        path: '/signin',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n    } else {\n      //If logged in \n      next();\n    }\n  } else if (to.matched.some(record => record.meta.requiresGuest)) {\n    //Check if  Logged into FB\n    if (fb.auth().currentUser) {\n      next({\n        path: '/',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n    } else {\n      //If logged in \n      next();\n    }\n  } else {\n    next();\n  }\n});\nexport default router;"]}]}