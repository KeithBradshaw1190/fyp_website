{"remainingRequest":"C:\\Users\\Work Account\\Documents\\4th Year\\Software Development\\smartgrocery\\smartgrocery\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Work Account\\Documents\\4th Year\\Software Development\\smartgrocery\\smartgrocery\\src\\components\\SignIn.vue?vue&type=style&index=1&id=fb473e1c&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Work Account\\Documents\\4th Year\\Software Development\\smartgrocery\\smartgrocery\\src\\components\\SignIn.vue","mtime":1587240345905},{"path":"C:\\Users\\Work Account\\Documents\\4th Year\\Software Development\\smartgrocery\\smartgrocery\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Work Account\\Documents\\4th Year\\Software Development\\smartgrocery\\smartgrocery\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Work Account\\Documents\\4th Year\\Software Development\\smartgrocery\\smartgrocery\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Work Account\\Documents\\4th Year\\Software Development\\smartgrocery\\smartgrocery\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Work Account\\Documents\\4th Year\\Software Development\\smartgrocery\\smartgrocery\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmJ0biB7DQogIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgYmFja2dyb3VuZDogdmFyKC0tcHJpbWFyeS1jb2xvcik7DQogIGNvbG9yOiAjZmZmOw0KICBwYWRkaW5nOiAwLjhyZW0gMS41cmVtOw0KICBib3JkZXI6IG5vbmU7DQogIGN1cnNvcjogcG9pbnRlcjsNCiAgZm9udC1zaXplOiAwLjlyZW07DQogIGJvcmRlci1yYWRpdXM6IDMwcHg7DQogIG1hcmdpbi10b3A6IDAuMnJlbTsNCn0NCg=="},{"version":3,"sources":["SignIn.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SignIn.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div id=\"signIn\">\r\n    <button type=\"button\" @click=\"signin\" class=\"btn\" style=\"background-color:#3b5998;\">\r\n      <i class=\"fab fa-facebook-f pr-1\"></i>Sign in with Facebook\r\n    </button>\r\n\r\n    <!-- <form class=\"form-signin\">\r\n              <div class=\"form-label-group\">\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"inputEmail\"\r\n                  class=\"form-control\"\r\n                  v-model=\"email\"\r\n                  placeholder=\"Email address\"\r\n                  required\r\n                  autofocus\r\n                />\r\n              </div>\r\n              <br />\r\n              <div class=\"form-label-group\">\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  class=\"form-control\"\r\n                  v-model=\"password\"\r\n                  placeholder=\"Password\"\r\n                  required\r\n                />\r\n              </div>\r\n              <br />\r\n              <button\r\n                class=\"btn btn-lg btn-primary btn-outline-primary\"\r\n                @click=\"signin\"\r\n                type=\"submit\"\r\n              >Log In</button>\r\n    </form>-->\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n</style>\r\n<script>\r\nimport firebaseApp from \"../firebaseInit\";\r\nimport firebase, { functions } from \"firebase\";\r\nimport router from \"../router\";\r\nimport axios from \"axios\";\r\nconst db = firebaseApp.firestore();\r\nexport default {\r\n  name: \"signin\",\r\n  data: function() {\r\n    return {\r\n      email: \"\",\r\n      password: \"\",\r\n      currentUser: firebaseApp.auth().currentUser\r\n    };\r\n  },created(){\r\n    var url_string = window.location.href;\r\n      var url = new URL(url_string);\r\n      var account_token = url.searchParams.get(\"account_linking_token\");\r\n      if(account_token!=null){\r\n        \r\n      }\r\n  },\r\n  methods: {\r\n    getUrlVars: function() {\r\n      var vars = {};\r\n      var parts = window.location.href.replace(\r\n        /[?&]+([^=&]+)=([^&]*)/gi,\r\n        function(m, key, value) {\r\n          vars[key] = value;\r\n        }\r\n      );\r\n      return vars;\r\n    },\r\n    getUrlParam: function(parameter, defaultvalue) {\r\n      var urlparameter = defaultvalue;\r\n      if (window.location.href.indexOf(parameter) > -1) {\r\n        urlparameter = this.getUrlVars()[parameter];\r\n      }\r\n      return urlparameter;\r\n    },\r\n    signin: function(e) {\r\n      //Access the verification parameters\r\n\r\n      var url_string = window.location.href;\r\n      var url = new URL(url_string);\r\n      var account_token = url.searchParams.get(\"account_linking_token\");\r\n      var access_token = process.env.VUE_APP_FB_PAGE_ACCESS_TOKEN;\r\n\r\n      var r_uri = url.searchParams.get(\"redirect_uri\");\r\n\r\n      console.log(account_token);\r\n      console.log(r_uri);\r\n      if (account_token != null && r_uri) {\r\n        var provider = new firebase.auth.FacebookAuthProvider();\r\n        firebaseApp\r\n          .auth()\r\n          .signInWithPopup(provider)\r\n          .then(result => {\r\n            var token = result.credential.accessToken;\r\n            // The signed-in user info.\r\n            var user = result.user;\r\n            alert(`Alert 1 Login successful for ${user.providerData[0].displayName}`);\r\n            firebaseApp\r\n              .auth()\r\n              .currentUser.updateProfile({\r\n                displayName: user.providerData[0].displayName\r\n              })\r\n              .then(() => {\r\n                this.updateDoc(user, account_token, access_token, r_uri);\r\n                //console.log(firebaseApp.auth().currentUser);\r\n              })\r\n              .catch(err => {\r\n                console.log(err);\r\n                this.errorMessage = err.message;\r\n              });\r\n          })\r\n\r\n          .catch(function(error) {\r\n            console.log(error);\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            // The email of the user's account used.\r\n            var email = error.email;\r\n            // The firebase.auth.AuthCredential type that was used.\r\n            var credential = error.credential;\r\n            // ...\r\n          });\r\n      } else {\r\n        var provider = new firebase.auth.FacebookAuthProvider();\r\n        firebaseApp\r\n          .auth()\r\n          .signInWithPopup(provider)\r\n          .then(result => {\r\n            var token = result.credential.accessToken;\r\n            // The signed-in user info.\r\n            var user = result.user;\r\n            alert(`Alert 2 Login successful for ${user.providerData[0].displayName}`);\r\n            firebaseApp\r\n              .auth()\r\n              .currentUser.updateProfile({\r\n                displayName: user.providerData[0].displayName\r\n              })\r\n              .then(() => {\r\n                this.currentUser = firebaseApp.auth().currentUser;\r\n                console.log(\"Then \"+this.currentUser.uid+\" \"+firebaseApp.auth().currentUser);\r\n\r\n                db.collection(\"users\")\r\n                  .doc(this.currentUser.uid)\r\n                  .set({\r\n                    name: user.providerData[0].displayName,\r\n                    facebookID: user.providerData[0].uid\r\n                  },{merge: true})\r\n                  .then(() => {\r\n                    this.loadData();\r\n                    router.go({ name: \"groceryDashboard\" });\r\n                  })\r\n                  .catch(err => {\r\n                    this.errorMessage = err.message;\r\n                  });\r\n              })\r\n              .catch(err => {\r\n                console.log(err);\r\n                this.errorMessage = err.message;\r\n              });\r\n          })\r\n\r\n          .catch(function(error) {\r\n            console.log(error);\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            // The email of the user's account used.\r\n            var email = error.email;\r\n            // The firebase.auth.AuthCredential type that was used.\r\n            var credential = error.credential;\r\n            // ...\r\n          });\r\n      }\r\n    },\r\n    loadData: function() {\r\n      console.log(\"Checking storage\" + sessionStorage.getItem(\"storeId\"));\r\n      console.log(\"uid: \" + this.currentUser.uid);\r\n\r\n      // you can load data from here and assign response in to variable\r\n      db.collection(\"users\")\r\n        .doc(this.currentUser.uid)\r\n        .get()\r\n        .then(function(doc) {\r\n          if (doc.exists && doc.get(\"storeId\")) {\r\n            console.log(doc.get(\"storeId\"));\r\n            sessionStorage.setItem(\"storeId\", doc.get(\"storeId\"));\r\n          }\r\n        })\r\n        .catch(function(error) {\r\n          console.log(\"Error getting document:\", error);\r\n        });\r\n    },\r\n    addToShoppingLists(resp, r_uri) {\r\n      this.currentUser = firebaseApp.auth().currentUser;\r\n      console.log(this.currentUser.uid);\r\n      console.log(\"addtoshopping lists\");\r\n      const newDocumentBody = {\r\n        messengerID: resp.data.recipient\r\n      };\r\n      db.collection(\"shopping_lists\")\r\n        .where(\"uid\", \"==\", this.currentUser.uid)\r\n        .get()\r\n        .then(response => {\r\n          let batch = db.batch();\r\n          response.docs.forEach(doc => {\r\n            const docRef = firebase\r\n              .firestore()\r\n              .collection(\"shopping_lists\")\r\n              .doc(doc.id);\r\n            batch.update(docRef, newDocumentBody);\r\n          });\r\n          batch.commit().then(() => {\r\n            console.log(`updated all documents inside`);\r\n            window.location.href =\r\n              r_uri + \"&authorization_code=\" + this.currentUser.uid;\r\n          });\r\n        })\r\n        .catch(err => {\r\n          console.log(err.message);\r\n\r\n          console.log(\"No Shopping lists yet\");\r\n          window.location.href =\r\n            r_uri + \"&authorization_code=\" + this.currentUser.uid;\r\n        });\r\n    },\r\n\r\n    updateDoc: function(user, account_token, access_token, r_uri) {\r\n      this.currentUser = firebaseApp.auth().currentUser;\r\n      console.log(\"PAGE ACCESS TOKEN\" + access_token);\r\n      axios\r\n        .get(\r\n          \"https://graph.facebook.com/v2.6/me?access_token=\" +\r\n            access_token +\r\n            \"&fields=recipient&account_linking_token=\" +\r\n            account_token\r\n        )\r\n        .then(resp => {\r\n          console.log(resp.data.recipient);\r\n          db.collection(\"users\")\r\n            .doc(this.currentUser.uid)\r\n            .update({\r\n              name: user.providerData[0].displayName,\r\n              facebookID: user.providerData[0].uid,\r\n              messengerID: resp.data.recipient\r\n            })\r\n            .then(() => {\r\n              console.log(\"then\");\r\n              this.addToShoppingLists(resp, r_uri);\r\n            })\r\n            .catch(err => {\r\n              console.log(err.message);\r\n              this.errorMessage = err.message;\r\n            });\r\n        });\r\n    }\r\n    // signin: function(e) {\r\n    //   fb.auth()\r\n    //     .signInWithEmailAndPassword(this.email, this.password)\r\n    //     .then(\r\n    //       user => {\r\n    //         alert(`Login successful for ${user.user.email}`);\r\n    //         router.go({ name: \"groceryDashboard\" });\r\n    //         console.log(user);\r\n    //       },\r\n    //       err => {\r\n    //         alert(\"error \" + err.message);\r\n    //       }\r\n    //     );\r\n    //   e.preventDefault();\r\n    // }\r\n  }\r\n};\r\n</script>\r\n<style scoped>\r\n.btn {\r\n  display: inline-block;\r\n  background: var(--primary-color);\r\n  color: #fff;\r\n  padding: 0.8rem 1.5rem;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 0.9rem;\r\n  border-radius: 30px;\r\n  margin-top: 0.2rem;\r\n}\r\n</style>"]}]}