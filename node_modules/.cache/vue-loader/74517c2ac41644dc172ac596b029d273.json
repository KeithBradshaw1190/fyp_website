{"remainingRequest":"C:\\Users\\Work Account\\Documents\\4th Year\\Software Development\\smartgrocery\\smartgrocery\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Work Account\\Documents\\4th Year\\Software Development\\smartgrocery\\smartgrocery\\src\\components\\ModifyList.vue?vue&type=style&index=0&id=1c46cea8&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Work Account\\Documents\\4th Year\\Software Development\\smartgrocery\\smartgrocery\\src\\components\\ModifyList.vue","mtime":1588771013790},{"path":"C:\\Users\\Work Account\\Documents\\4th Year\\Software Development\\smartgrocery\\smartgrocery\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Work Account\\Documents\\4th Year\\Software Development\\smartgrocery\\smartgrocery\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Work Account\\Documents\\4th Year\\Software Development\\smartgrocery\\smartgrocery\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Work Account\\Documents\\4th Year\\Software Development\\smartgrocery\\smartgrocery\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Work Account\\Documents\\4th Year\\Software Development\\smartgrocery\\smartgrocery\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KI21vZGlmeS1saXN0IHsNCiAgaGVpZ2h0OiAxMDAlOw0KICBtaW4taGVpZ2h0OiAxMDAlOw0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWRmMGY1Ow0KfQ0KYm9keSB7DQogIG1hcmdpbi10b3A6IDIwcHg7DQogIC8qIGJhY2tncm91bmQ6ICNmYWZhZmE7ICovDQp9DQovKiM4MWNmZTA7ICovDQouU2xpc3QgLmJ0bi1saW5rOmhvdmVyLA0KLlNsaXN0IC5idG4tbGluazpmb2N1cyB7DQogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsNCn0NCg0KLlNsaXN0IHsNCiAgbWFyZ2luOiA1MHB4IGF1dG87DQogIGJveC1zaGFkb3c6IDAgMCAxcHggcmdiYSgwLCAwLCAwLCAwLjEpOw0KfQ0KDQoubXlhY2NvcmRpb24gbGkgKyBsaSB7DQogIG1hcmdpbi10b3A6IDEwcHg7DQp9DQouY2FyZC1oZWFkZXIgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOw0KICBib3JkZXItYm90dG9tOiAwOw0KICB0ZXh0LWFsaWduOiBjZW50ZXI7DQp9DQouY2VudGVyIHsNCiAgbWFyZ2luOiBhdXRvOw0KfQ0KI2VkaXRCdG4gew0KICBwYWRkaW5nLXRvcDogMDsNCiAgcGFkZGluZy1ib3R0b206IDVweDsNCn0NCi5saXN0LXRpdGxlIHsNCiAgcGFkZGluZy1ib3R0b206IDA7DQogIG1hcmdpbi1ib3R0b206IDA7DQp9DQoubGlzdE5hbWUgew0KICBjb2xvcjogYmxhY2s7DQp9DQouaXRlbXNDb3VudCB7DQogIGZvbnQtc2l6ZTogMC44cmVtOw0KfQ0KLmZvcm0tY29udHJvbDpmb2N1cyB7DQogIGJveC1zaGFkb3c6IG5vbmU7DQp9DQoNCi5mb3JtLWNvbnRyb2wtdW5kZXJsaW5lZCB7DQogIGJvcmRlci13aWR0aDogMDsNCiAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4Ow0KICBib3JkZXItcmFkaXVzOiAwOw0KICBwYWRkaW5nLWxlZnQ6IDA7DQp9DQoNCi8qPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki8NCi5tYWluLXBhbmVsID4gLmNvbnRlbnQgew0KICBwYWRkaW5nOiAzMHB4IDE1cHg7DQogIG1pbi1oZWlnaHQ6IGNhbGMoMTAwdmggLSAxMjNweCk7DQp9DQoucXVhbnRpdHkgew0KICBsaW5lLWhlaWdodDogMC44cmVtOw0KfQ0KLmNhcmQgew0KICBib3JkZXItcmFkaXVzOiA2cHg7DQogIGJveC1zaGFkb3c6IDAgMnB4IDJweCByZ2JhKDIwNCwgMTk3LCAxODUsIDAuNSk7DQogIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7DQogIGNvbG9yOiAjMjUyNDIyOw0KICBtYXJnaW4tYm90dG9tOiAyMHB4Ow0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQogIHotaW5kZXg6IDE7DQp9DQouY2FyZCAudGl0bGUgew0KICBtYXJnaW46IDA7DQogIGNvbG9yOiAjMjUyNDIyOw0KICBmb250LXdlaWdodDogMzAwOw0KfQ0KLmNhcmQgLmhlYWRlciB7DQogIHBhZGRpbmc6IDIwcHggMjBweCAwOw0KfQ0KLmNhcmQgLmNvbnRlbnQgew0KICBwYWRkaW5nOiAxNXB4IDE1cHggMTBweCAxNXB4Ow0KfQ0KDQouY2FyZC11c2VyIC5hdXRob3IgLnRpdGxlIHsNCiAgY29sb3I6ICM0MDNkMzk7DQp9DQouY2FyZC11c2VyIC50aXRsZSB7DQogIGZvbnQtd2VpZ2h0OiA2MDA7DQogIGxpbmUtaGVpZ2h0OiAyNHB4Ow0KfQ0KLmNhcmQtdXNlciAuYXV0aG9yIHsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KICB0ZXh0LXRyYW5zZm9ybTogbm9uZTsNCn0NCi5yb3cgew0KICBtYXJnaW4tbGVmdDogMTVweDsNCn0NCi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi8NCi5pdGVtIHsNCiAgcG9zaXRpb246IHJlbGF0aXZlOw0KICBkaXNwbGF5OiBibG9jazsNCiAgcGFkZGluZzogMC43NXJlbSAxLjI1cmVtOw0KICBtYXJnaW4tYm90dG9tOiAtMXB4Ow0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOw0KICBib3JkZXI6IDA7DQp9DQouYnRuLWxpbms6aG92ZXIgew0KICB0ZXh0LWRlY29yYXRpb246IG5vbmU7DQp9DQouYnRuLWxpbms6Zm9jdXMgew0KICB0ZXh0LWRlY29yYXRpb246IG5vbmU7DQp9DQo="},{"version":3,"sources":["ModifyList.vue"],"names":[],"mappingsifile":"ModifyList.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div id=\"add-Item\" class=\"container-fluid bg-light main-panel\">\r\n    <div class=\"content\">\r\n      <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-4 col-md-5\">\r\n            <div class=\"accordion\" id=\"myAccordion\">\r\n              <div class=\"card card-user\">\r\n                <div class=\"card-header\" id=\"headingOne\">\r\n                  <h2 class=\"mb-0\">\r\n                    <button\r\n                      type=\"button\"\r\n                      class=\"btn btn-link author\"\r\n                      data-toggle=\"collapse\"\r\n                      data-target=\"#collapseOne\"\r\n                    >\r\n                      <div class=\"author\">\r\n                        <h4 class=\"title\" v-if=\"listName != ''\">\r\n                          {{ listName }}\r\n                          <br />\r\n                          <small class=\"text-grey\">(Click to expand)</small>\r\n                        </h4>\r\n                        <h4 class=\"title\" v-if=\"listName == ''\">\r\n                          List Name\r\n                          <br />\r\n                        </h4>\r\n                      </div>\r\n                    </button>\r\n                  </h2>\r\n                </div>\r\n                <hr />\r\n                <div class=\"text-center\">\r\n                  <div v-if=\"!changes\" class=\"row\">\r\n                    <div class=\"col-md-3\">\r\n                      <h5>\r\n                        {{ amountOfItems }}\r\n                        <br />\r\n                        <small>Items</small>\r\n                      </h5>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                      <h5>\r\n                        €{{ totalPrice }}\r\n                        <br />\r\n                        <small>Total Cost</small>\r\n                      </h5>\r\n                    </div>\r\n                    <div class=\"col-md-4 mt-2\">\r\n                      <small class=\"mt-3 mr-1\">\r\n                        <button\r\n                          class=\"btn btn-sm btn-outline-danger\"\r\n                          @click=\"deleteList\"\r\n                        >Delete List</button>\r\n                      </small>\r\n                    </div>\r\n                  </div>\r\n                  <!--Row for changes -->\r\n                  <div v-if=\"changes\" class=\"row\">\r\n                    <div class=\"col-md-3\">\r\n                      <h5>\r\n                        {{ amountOfItems }}\r\n                        <br />\r\n                        <small>Items</small>\r\n                      </h5>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                      <h5>\r\n                        €{{ totalPrice }}\r\n                        <br />\r\n                        <small>Total Cost</small>\r\n                      </h5>\r\n                    </div>\r\n                    <div class=\"col-md-4 mt-2\">\r\n                      <small class=\"mt-3 mr-1\">\r\n                        <button\r\n                          class=\"btn btn-sm btn-outline-success\"\r\n                          @click=\"updateList\"\r\n                        >Save Changes</button>\r\n                      </small>\r\n                    </div>\r\n                  </div>\r\n                  <!-- Row for changes -->\r\n                </div>\r\n                <div\r\n                  id=\"collapseOne\"\r\n                  class=\"collapse\"\r\n                  aria-labelledby=\"headingOne\"\r\n                  data-parent=\"#myAccordion\"\r\n                >\r\n                  <div class>\r\n                    <div class=\"content container\">\r\n                      <div class>\r\n                        <ul class=\"list-group-flush mb-3 item\">\r\n                          <li\r\n                            v-for=\"(item, index) in shoppingLists[0]\"\r\n                            v-bind:key=\"index\"\r\n                            class=\"list-group-item d-flex justify-content-between lh-condensed item\"\r\n                          >\r\n                            <div>\r\n                              <h6 class=\"my-0\">\r\n                                <a\r\n                                  class=\"text-danger\"\r\n                                  @click=\"deleteItemFromLocalList(index)\"\r\n                                >X Remove</a>\r\n                                <br />\r\n                                {{ item.name }}\r\n                              </h6>\r\n                              <div class=\"quantity\">\r\n                                <small class=\"text-success mr-3\">Price: €{{ item.price }}</small>\r\n                                <!-- <small class=\"text-muted\"\r\n                                  >Quantity: {{ item.quantity }}</small\r\n                                >-->\r\n\r\n                                <div class=\"input-group\">\r\n                                  <div class=\"input-group-prepend\">\r\n                                    <small class=\"input-group-text\">Quantity</small>\r\n                                  </div>\r\n                                  <input\r\n                                    type=\"number\"\r\n                                    name=\"quantity\"\r\n                                    min=\"1\"\r\n                                    v-model=\"item.quantity\"\r\n                                    v-on:change=\"event => changeLocalQuantity(index, event)\"\r\n                                    class=\"form-control form-control\"\r\n                                  />\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                      <!--end shopping-cart -->\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- Begining of list col -->\r\n\r\n          <!-- End of List col -->\r\n          <div class=\"col-lg-8 col-md-7\">\r\n            <div class=\"card\">\r\n              <div class=\"header\">\r\n                <h4 class=\"title\">Add Products</h4>\r\n              </div>\r\n              <div class=\"content\">\r\n                <form id=\"createListForm\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-8\">\r\n                      <label>Product</label>\r\n                      <AutoCompleteSearch\r\n                        :place-holder-text=\"placeHolderInputText\"\r\n                        :result-items=\"autoCompleteResult\"\r\n                        :on-key-up=\"onKeyUpAutoCompleteEvent\"\r\n                        :on-selected=\"onSelectedAutoCompleteEvent\"\r\n                        :auto-complete-progress=\"autoCompleteProgress\"\r\n                        :item-text=\"autoCompleteText\"\r\n                        :item-id=\"autoCompleteFieldId\"\r\n                        :item-image=\"autoCompleteImage\"\r\n                        :item-department=\"AutoCompleteDepartment\"\r\n                      ></AutoCompleteSearch>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                      <div class=\"form-group\">\r\n                        <label>Quantity</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          class=\"form-control border-input\"\r\n                          required\r\n                          v-model=\"quantity\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                      <div class=\"form-group\">\r\n                        <label>\r\n                          Product Purchase Frequency\r\n                          <small>(Optional)</small>\r\n                        </label>\r\n                        <div class=\"input-group mb-3\">\r\n                          <div class=\"input-group-prepend\">\r\n                            <label class=\"input-group-text\" for=\"frequencySelect\">Frequency</label>\r\n                          </div>\r\n                          <select v-model=\"frequency\" class=\"custom-select\" id=\"frequencySelect\">\r\n                            <option value=\"none\" selected>Choose Purchase Frequency</option>\r\n                            <option value=\"More Than Once a Week\">More than Once A Week</option>\r\n                            <option value=\"Once Per Week\">Once A Week</option>\r\n                            <option value=\"Bi-Weekly\">Bi-Weekly</option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"text-center\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      @click=\"addToList\"\r\n                      class=\"btn btn-secondary btn-fill btn-wd\"\r\n                      id=\"btnCreateList\"\r\n                    >Add Product</button>\r\n                  </div>\r\n                  <div class=\"clearfix\"></div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n            <!-- end of CREATE list card -->\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport firebaseApp from \"../firebaseInit\";\r\nimport router from \"../router\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport AutoCompleteSearch from \"./AutoCompleteSearch\";\r\nimport axios from \"axios\";\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default {\r\n  name: \"modify-list\",\r\n  components: {\r\n    Sidebar,\r\n    AutoCompleteSearch\r\n  },\r\n  //each autocomplete value is an attribute to select from Tesco API\r\n  data() {\r\n    return {\r\n      currentUser: false,\r\n      placeHolderInputText: \"Search for a Product\",\r\n      autoCompleteResult: [],\r\n      autoCompleteProgress: false,\r\n      autoCompleteText: \"name\",\r\n      autoCompleteFieldId: \"price\",\r\n      autoCompleteImage: \"image\",\r\n      AutoCompleteDepartment: \"superDepartment\",\r\n      ingredientName: \"\",\r\n      listName: \"\",\r\n      amountOfItems: 0,\r\n      totalPrice: null,\r\n      quantity: null,\r\n      frequency: \"none\",\r\n      listId: null,\r\n      shoppingLists: [],\r\n      changes: false,\r\n      messengerID: null\r\n    };\r\n  },\r\n  created() {\r\n    if (firebaseApp.auth().currentUser) {\r\n      this.currentUser = firebaseApp.auth().currentUser;\r\n    }\r\n    this.listId = this.$route.params.id;\r\n\r\n    this.fetchListItems(this.listId);\r\n  },\r\n  methods: {\r\n    onSelectedAutoCompleteEvent(price, name, img, department) {\r\n      console.log(price, name, img, department);\r\n\r\n      this.autoCompleteProgress = false;\r\n      this.autoCompleteResult = [];\r\n      var product = {\r\n        name: name,\r\n        price: price,\r\n        img: img,\r\n        department: department\r\n      };\r\n      this.placeHolderInputText = name;\r\n      this.productList = product;\r\n    },\r\n    onKeyUpAutoCompleteEvent(keywordEntered) {\r\n      //reset\r\n\r\n      this.autoCompleteResult = [];\r\n      this.autoCompleteProgress = false;\r\n      if (keywordEntered.length > 1) {\r\n        this.autoCompleteProgress = true;\r\n        axios({\r\n          method: \"get\",\r\n          url:\r\n            \"https://dev.tescolabs.com/grocery/products/?query=\" +\r\n            keywordEntered +\r\n            \"&offset=0&limit=10\",\r\n          headers: {\r\n            \"Ocp-Apim-Subscription-Key\": \"30661c41f57f4b1e8351e4834c462e40\"\r\n          }\r\n        })\r\n          .then(response => {\r\n            //Use the suggested item as a possible ingredient string(It has no additional product info-saves parsing)\r\n            // this.ingredientName =\r\n            //   response.data.uk.ghs.products.suggestions[0].text;\r\n            var newData = [];\r\n            response.data.uk.ghs.products.results.forEach(function(\r\n              item,\r\n              index\r\n            ) {\r\n              console.log(item);\r\n              if (\r\n                item.name.toLowerCase().indexOf(keywordEntered.toLowerCase()) >=\r\n                1\r\n              ) {\r\n                newData.push(item);\r\n              }\r\n            });\r\n            this.autoCompleteResult = newData;\r\n            this.autoCompleteProgress = false;\r\n          })\r\n          .catch(e => {\r\n            this.autoCompleteProgress = false;\r\n            this.autoCompleteResult = [];\r\n          });\r\n      } else {\r\n        this.autoCompleteProgress = false;\r\n        this.autoCompleteResult = [];\r\n      }\r\n    },\r\n    addToList() {\r\n      if (this.productList != null) {\r\n        this.productList.quantity = this.quantity;\r\n        this.productList.frequency = this.frequency;\r\n        //Simple name used for recipe search in chatbot\r\n        //filter out weigh values if present\r\n        var simpleName = this.productList.name.replace(/\\d+(g|ml)/i, \"\");\r\n        simpleName = simpleName.substr(simpleName.indexOf(\" \") + 1);\r\n\r\n          var wordsToRemove = [\r\n          \"Tesco\",\r\n          \"Large\",\r\n          \"Multipack\",\r\n          \"Pack\",\r\n          \"Family\",\r\n          \"Finest\",\r\n          \"Mixed\",\r\n          \"Organic\",\r\n          \"Happy\",\r\n          \"Medium\",\r\n          \"Hovis\",\r\n          \"White\",\r\n          \"Soft\",\r\n          \"Free Range\",\r\n          \"Irish\",\r\n          \"English\",\r\n          \"British\",\r\n          \"Original\"\r\n        ];\r\n        for (var i = 0; i <= wordsToRemove.length; i++) {\r\n          simpleName = simpleName.replace(wordsToRemove[i], \"\");\r\n          this.productList.simpleName = simpleName;\r\n        }\r\n\r\n        var listRef = db.collection(\"shopping_lists\").doc(this.listId);\r\n        var plist = this.productList;\r\n\r\n        let transaction = db\r\n          .runTransaction(t => {\r\n            return t.get(listRef).then(doc => {\r\n              console.log(doc.data().items);\r\n              var newItems = doc.data().items.concat(this.productList);\r\n              console.log(newItems);\r\n              t.update(listRef, {\r\n                list_price: this.totalPrice,\r\n                list_quantity: this.quantity,\r\n                items: newItems\r\n              });\r\n            });\r\n          })\r\n          .then(result => {\r\n            console.log(\"Transaction success!\");\r\n            this.$router.go();\r\n          })\r\n          .catch(err => {\r\n            console.log(\"Transaction failure:\", err);\r\n          });\r\n      } else {\r\n        console.log(\"problem\");\r\n      }\r\n    },\r\n    deleteItemFromLocalList(itemindex) {\r\n      this.changes = true;\r\n      var localSlist = this.shoppingLists[0];\r\n      localSlist.splice(itemindex, 1);\r\n      var totalp = 0;\r\n\r\n      //Adjust new total price\r\n      localSlist.forEach(element => {\r\n        totalp = totalp + element.quantity * element.price;\r\n      });\r\n      this.totalPrice = totalp.toFixed(2);\r\n      this.amountOfItems = localSlist.length;\r\n      console.log(totalp);\r\n      console.log(localSlist.length);\r\n    },\r\n    changeLocalQuantity(itemindex) {\r\n      this.changes = true;\r\n      var localSlist = this.shoppingLists[0];\r\n      this.shoppingLists[0][itemindex] = localSlist[itemindex];\r\n      var totalp = 0;\r\n      localSlist.forEach(element => {\r\n        totalp = totalp + element.quantity * element.price;\r\n      });\r\n      this.totalPrice = totalp.toFixed(2);\r\n      this.amountOfItems = localSlist.length;\r\n    },\r\n    updateList() {\r\n      if (this.changes == true) {\r\n        var localSlist = this.shoppingLists[0];\r\n\r\n        var listRef = db.collection(\"shopping_lists\").doc(this.listId);\r\n\r\n        let transaction = db\r\n          .runTransaction(t => {\r\n            return t.get(listRef).then(doc => {\r\n              console.log(doc.data().items);\r\n              var newItems = localSlist;\r\n              console.log(newItems);\r\n              t.update(listRef, {\r\n                list_price: this.totalPrice,\r\n                list_quantity: this.amountOfItems,\r\n                items: newItems\r\n              });\r\n            });\r\n          })\r\n          .then(result => {\r\n            console.log(\"Transaction success!\");\r\n            this.$router.go();\r\n          })\r\n          .catch(err => {\r\n            console.log(\"Transaction failure:\", err);\r\n          });\r\n      } else {\r\n        console.log(\"problem\");\r\n      }\r\n    },\r\n    deleteList() {\r\n      db.collection(\"shopping_lists\")\r\n        .doc(this.listId)\r\n        .delete()\r\n        .then(() => {\r\n          this.$router.push({ name: \"groceryLists\" });\r\n        });\r\n    },\r\n    fetchListItems(listId) {\r\n      var totalp = 0;\r\n\r\n      var shoppingLists = [];\r\n      let listsRef = db.collection(\"shopping_lists\");\r\n      let query = listsRef\r\n        .doc(listId)\r\n        .get()\r\n        .then(doc => {\r\n          var messengerID;\r\n          if (doc.empty) {\r\n            shoppingLists = [];\r\n            console.log(\"No matching documents.\");\r\n            return;\r\n          } else {\r\n            if (doc.data().messengerID) {\r\n              messengerID = doc.data().messengerID;\r\n              console.log(\"messengerID in fetchList\" + messengerID);\r\n            } else {\r\n              messengerID = null;\r\n            }\r\n            var id = doc.id.toString;\r\n            var theDoc = doc.data();\r\n            theDoc.docuID = doc.id;\r\n            theDoc.amnt = theDoc.items.length;\r\n            this.listName = theDoc.listName;\r\n            this.messengerID = messengerID;\r\n            this.amountOfItems = theDoc.amnt;\r\n            theDoc.items.forEach(element => {\r\n              totalp = totalp + element.quantity * element.price;\r\n            });\r\n            this.totalPrice = totalp.toFixed(2);\r\n            listsRef.doc(listId).set(\r\n              {\r\n                list_price: this.totalPrice,\r\n                list_quantity: this.amountOfItems\r\n              },\r\n              { merge: true }\r\n            );\r\n            shoppingLists.push(theDoc.items);\r\n          }\r\n          //Assign to data value\r\n          this.shoppingLists = shoppingLists;\r\n        })\r\n        .catch(err => {\r\n          console.log(\"Error getting documents\", err);\r\n        })\r\n        .then(() => {\r\n          this.checkForMessengerID();\r\n        });\r\n    },\r\n    checkForMessengerID() {\r\n      //local value should be null as it is not in the shopping list document\r\n      console.log(\"check for messengerID\" + this.messengerID);\r\n\r\n      if (this.messengerID == null) {\r\n        var messengerID;\r\n        //This means we need to get it from the users document\r\n        db.collection(\"users\")\r\n          .doc(this.currentUser.uid)\r\n          .get()\r\n          .then(function(doc) {\r\n            if (doc.exists) {\r\n              console.log(\"checkformessenger\" + doc.data().messengerID);\r\n              messengerID = doc.data().messengerID;\r\n\r\n              //then call method to add messenger ID to lists\r\n            }\r\n          })\r\n          .catch(function(error) {\r\n            console.log(\"Error getting document:\", error);\r\n          })\r\n          .then(() => {\r\n            this.messengerID = messengerID;\r\n            if (this.messengerID != null) {\r\n              this.addMessengerIDToLists();\r\n            } else {\r\n              console.log(\"Messenger ID is still not set! \" + this.messengerID);\r\n            }\r\n          });\r\n      }\r\n    },\r\n    addMessengerIDToLists() {\r\n      console.log(\"addMessengerIDToLists\" + this.messengerID);\r\n      const newDocumentBody = {\r\n        messengerID: this.messengerID\r\n      };\r\n      db.collection(\"shopping_lists\")\r\n        .where(\"uid\", \"==\", this.currentUser.uid)\r\n        .get()\r\n        .then(response => {\r\n          let batch = db.batch();\r\n          response.docs.forEach(doc => {\r\n            const docRef = db.collection(\"shopping_lists\").doc(doc.id);\r\n            batch.update(docRef, newDocumentBody);\r\n          });\r\n          batch.commit().then(() => {\r\n            console.log(`updated all documents inside`);\r\n          });\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style scoped>\r\n#modify-list {\r\n  height: 100%;\r\n  min-height: 100%;\r\n  background-color: #edf0f5;\r\n}\r\nbody {\r\n  margin-top: 20px;\r\n  /* background: #fafafa; */\r\n}\r\n/*#81cfe0; */\r\n.Slist .btn-link:hover,\r\n.Slist .btn-link:focus {\r\n  text-decoration: none;\r\n}\r\n\r\n.Slist {\r\n  margin: 50px auto;\r\n  box-shadow: 0 0 1px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.myaccordion li + li {\r\n  margin-top: 10px;\r\n}\r\n.card-header {\r\n  background-color: #ffffff;\r\n  border-bottom: 0;\r\n  text-align: center;\r\n}\r\n.center {\r\n  margin: auto;\r\n}\r\n#editBtn {\r\n  padding-top: 0;\r\n  padding-bottom: 5px;\r\n}\r\n.list-title {\r\n  padding-bottom: 0;\r\n  margin-bottom: 0;\r\n}\r\n.listName {\r\n  color: black;\r\n}\r\n.itemsCount {\r\n  font-size: 0.8rem;\r\n}\r\n.form-control:focus {\r\n  box-shadow: none;\r\n}\r\n\r\n.form-control-underlined {\r\n  border-width: 0;\r\n  border-bottom-width: 1px;\r\n  border-radius: 0;\r\n  padding-left: 0;\r\n}\r\n\r\n/*==================================================================*/\r\n.main-panel > .content {\r\n  padding: 30px 15px;\r\n  min-height: calc(100vh - 123px);\r\n}\r\n.quantity {\r\n  line-height: 0.8rem;\r\n}\r\n.card {\r\n  border-radius: 6px;\r\n  box-shadow: 0 2px 2px rgba(204, 197, 185, 0.5);\r\n  background-color: #ffffff;\r\n  color: #252422;\r\n  margin-bottom: 20px;\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n.card .title {\r\n  margin: 0;\r\n  color: #252422;\r\n  font-weight: 300;\r\n}\r\n.card .header {\r\n  padding: 20px 20px 0;\r\n}\r\n.card .content {\r\n  padding: 15px 15px 10px 15px;\r\n}\r\n\r\n.card-user .author .title {\r\n  color: #403d39;\r\n}\r\n.card-user .title {\r\n  font-weight: 600;\r\n  line-height: 24px;\r\n}\r\n.card-user .author {\r\n  text-align: center;\r\n  text-transform: none;\r\n}\r\n.row {\r\n  margin-left: 15px;\r\n}\r\n/*------------------------------------------------------------------*/\r\n.item {\r\n  position: relative;\r\n  display: block;\r\n  padding: 0.75rem 1.25rem;\r\n  margin-bottom: -1px;\r\n  background-color: #fff;\r\n  border: 0;\r\n}\r\n.btn-link:hover {\r\n  text-decoration: none;\r\n}\r\n.btn-link:focus {\r\n  text-decoration: none;\r\n}\r\n</style>\r\n"]}]}